# Template: https://github.com/google-github-actions/example-workflows/blob/main/workflows/deploy-cloudrun/cloudrun-source.yml
# This workflow will deploy source code on Cloud Run when a commit is pushed to the main branch
#
# Overview:
#
# 1. Authenticate to Google Cloud
# 2. Deploy it to Cloud Run
#
# To configure this workflow:
#
# 1. Ensure the required Google Cloud APIs are enabled:
#
#    Cloud Run            run.googleapis.com
#    Cloud Build          cloudbuild.googleapis.com
#    Artifact Registry    artifactregistry.googleapis.com
#
# 2. Create and configure a GCP Console IAM service account
#
# 3. Ensure the required IAM permissions are granted to the service account
#
#    Cloud Run
#      roles/run.admin
#      roles/iam.serviceAccountUser     (to act as the Cloud Run runtime service account)
#
#    Cloud Build
#      roles/cloudbuild.builds.editor
#
#    Cloud Storage
#      roles/storage.admin
#
#    Artifact Registry
#      roles/artifactregistry.admin     (project or repository level)
#
#    NOTE: You should always follow the principle of least privilege when assigning IAM roles
#
# 4. Create GitHub secrets for the GCP Console IAM service account key JSON string
#
# 5. Change the values for the SERVICE and REGION environment variables (below) to reflect our service information.
#
# For more support on how to run this workflow, please visit https://github.com/marketplace/actions/deploy-to-cloud-run
#
# Further reading:
#   Cloud Run runtime service account   - https://cloud.google.com/run/docs/securing/service-identity
#   Cloud Run IAM permissions           - https://cloud.google.com/run/docs/deploying-source-code#permissions_required_to_deploy
#   Cloud Run builds from source        - https://cloud.google.com/run/docs/deploying-source-code
#   Principle of least privilege        - https://cloud.google.com/blog/products/identity-security/dont-get-pwned-practicing-the-principle-of-least-privilege

name: Prod - Build and Deploy to Cloud Run

# Trigger the workflow on pushes to the development branch and tags with "deploy"
on:
  push:
    branches:
      - main

# Environment variables accessible to all the steps in the workflow
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  RUN_REGION: us-central1
  SERVICE_NAME: service-willows-circle-00001-46p

jobs:
  # Define a job named "setup-build-deploy" that will use ubuntu to deploy and run the step of pipeline
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository using pre-built GitHub Action
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Google authentication using pre-built GitHub Action  google-github-actions/auth
      # You can use Workload Identity Federation or traditional Service Account Key JSON to authenticate the actions
      # Using service account key json file as a GitHub secret
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Step 3: Deploy the Docker image to Cloud Run using pre-built GitHub Action
      # build-args sets process.env variables with GitHub secret values
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.RUN_REGION }}
          source: ./
